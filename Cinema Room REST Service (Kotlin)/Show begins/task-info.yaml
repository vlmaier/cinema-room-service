type: edu
files:
- name: src/cinema/Application.kt
  visible: true
  text: |-
    package cinema

    import org.springframework.boot.autoconfigure.SpringBootApplication
    import org.springframework.boot.runApplication

    @SpringBootApplication
    open class Application

    fun main(args: Array<String>) {
        runApplication<Application>(*args)
    }
  learner_created: false
- name: src/resources/application.properties
  visible: true
  text: |-
    server.port=28852
    management.endpoints.web.exposure.include=*
    management.endpoint.shutdown.enabled=true
  learner_created: false
- name: test/CinemaTests.java
  visible: false
  text: |-
    import cinema.ApplicationKt;
    import org.hyperskill.hstest.dynamic.DynamicTest;
    import org.hyperskill.hstest.dynamic.input.DynamicTesting;
    import org.hyperskill.hstest.mocks.web.response.HttpResponse;
    import org.hyperskill.hstest.stage.SpringTest;
    import org.hyperskill.hstest.testcase.CheckResult;

    import static org.hyperskill.hstest.testing.expect.Expectation.expect;
    import static org.hyperskill.hstest.testing.expect.json.JsonChecker.*;

    public class CinemaTests extends SpringTest {

        public CinemaTests() {
            super(ApplicationKt.class, 28852);
        }

        CheckResult testEndpoint() {

            HttpResponse response = get("/seats").send();

            if (response.getStatusCode() != 200) {
                return CheckResult.wrong("GET /seats should respond with " +
                    "status code 200, responded: " + response.getStatusCode() + "\n\n" +
                    "Response body:\n" + response.getContent());
            }

            return CheckResult.correct();
        }

        CheckResult testEndpointAvailableSeats() {
            HttpResponse response = get("/seats").send();

            expect(response.getContent()).asJson().check(
                isObject()
                    .value("available_seats",
                        isArray(
                            81,
                            isObject()
                            .value("row", isInteger(i -> i >= 1 && i <= 9))
                            .value("column", isInteger(i -> i >= 1 && i <= 9))
                        )
                    )
                    .value("total_columns", 9)
                    .value("total_rows", 9)
            );

            return CheckResult.correct();
        }

        @DynamicTest
        DynamicTesting[] dynamicTests = new DynamicTesting[]{
            this::testEndpoint,
            this::testEndpointAvailableSeats
        };
    }
  learner_created: false
- name: build.gradle
  visible: true
  text: |-
    buildscript {
        repositories {
            mavenCentral()
        }
        dependencies {
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$hs.kotlin.version"
            classpath "org.springframework.boot:spring-boot-gradle-plugin:$hs.spring.bootVersion"
            classpath "io.spring.gradle:dependency-management-plugin:$hs.spring.dependencyManagementVersion"
        }
    }

    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
    }

    sourceSets.main.resources.srcDirs = ["src/resources"]

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
  learner_created: false
- name: src/cinema/CinemaController.kt
  visible: true
  learner_created: true
- name: src/cinema/seats/Seat.kt
  visible: true
  learner_created: true
- name: src/cinema/seats/SeatService.kt
  visible: true
  learner_created: true
- name: src/cinema/seats/AvailableSeats.kt
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/learn/step/20457#comment
status: Solved
feedback:
  message: Congratulations!
  time: "Thu, 20 Apr 2023 18:04:49 UTC"
record: 1
